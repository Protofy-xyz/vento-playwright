{
    "name": "playwright",
    "icon": "venetian-mask",
    "cards": [
        {
            "key": "action_1753274431392",
            "width": 2,
            "height": 8,
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${cardAction({ data, mode: \"full\" })}\n    `\n});\n",
            "name": "Open Browser",
            "color": "#45ba4b",
            "description": "open playwright browser",
            "rulesCode": "return execute_action(\"/api/v1/playwright/open-browser\", { });",
            "params": {},
            "type": "action",
            "buttonLabel": "Open",
            "displayIcon": false,
            "displayResponse": false
        },
        {
            "key": "action_1753275232639",
            "width": 2,
            "height": 8,
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${cardIcon({ data, size: '48' })}\n        ${cardAction({ data })}\n    `\n});\n",
            "name": "Navigate",
            "color": "#0a4481",
            "description": "navigate playwright browser",
            "rulesCode": "return execute_action(\"/api/v1/playwright/navigate\", { url: userParams.url });",
            "params": {
                "url": "url"
            },
            "type": "action",
            "buttonLabel": "Navigate",
            "displayIcon": false,
            "displayResponse": false,
            "configParams": {
                "url": {
                    "visible": true,
                    "defaultValue": "https://github.com/topics/llm",
                    "type": "string"
                }
            }
        },
        {
            "key": "action_1753276510670",
            "width": 2,
            "height": 8,
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${cardAction({ data, mode: \"full\" })}\n    `\n});\n",
            "name": "Close Browser",
            "color": "#d65348",
            "description": "close playwright browser",
            "rulesCode": "return execute_action(\"/api/v1/playwright/close-browser\", { });",
            "params": {},
            "type": "action",
            "buttonLabel": "Close",
            "displayIcon": false,
            "displayResponse": false
        },
        {
            "key": "action_1753275232639_vento_copy_7rj5xpu4q47ose3xm6hye",
            "width": 2,
            "height": 8,
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${cardIcon({ data, size: '48' })}\n        ${cardAction({ data })}\n    `\n});\n",
            "name": "AI browser action",
            "color": "#0a4481",
            "description": "navigate playwright browser",
            "rulesCode": "return execute_action(\"/api/v1/playwright/ai-action\", { prompt: userParams.prompt });",
            "params": {
                "prompt": "prompt"
            },
            "type": "action",
            "buttonLabel": "Send",
            "displayIcon": false,
            "displayResponse": true,
            "configParams": {
                "prompt": {
                    "visible": true,
                    "defaultValue": "",
                    "type": "text"
                }
            }
        },
        {
            "key": "action_1753275232639_vento_copy_f5egvvk9tdo7iv4gg9t0f",
            "width": 2,
            "height": 8,
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${cardIcon({ data, size: '48' })}\n        ${cardAction({ data })}\n    `\n});\n",
            "name": "Get Github Repositories",
            "color": "#0a4481",
            "description": "navigate playwright browser",
            "rulesCode": "const message = `\r\nawait page.goto('https://github.com/topics/${userParams.topic ?? \"llm\"}')\r\nconst repos = await page.locator('article').evaluateAll(cards => {\r\n        return cards.map(card => {\r\n                const nameEl = card.querySelector('h3 a');\r\n\r\n                const url = nameEl?.href;\r\n                const name = nameEl?.innerText?.trim();\r\n\r\n                \r\n                const language = card.querySelector('[itemprop=\"programmingLanguage\"]')?.innerText?.trim();\r\n                \r\n                const starsSpan = card.querySelector('span.Counter[aria-label*=\"starred\"]');\r\n                const starsRaw = starsSpan?.textContent?.trim() || '0';\r\n\r\n                const stars = (() => {\r\n                const cleaned = starsRaw.replace(',', '').toLowerCase();\r\n                if (cleaned.endsWith('k')) return Math.round(parseFloat(cleaned) * 1000);\r\n                if (cleaned.endsWith('m')) return Math.round(parseFloat(cleaned) * 1000000);\r\n                return parseInt(cleaned) || 0;\r\n                })();\r\n                \r\n                return { name, url, language, stars };\r\n        });\r\n});\r\n\r\nreturn repos;\r\n`\r\n\r\nreturn execute_action(\"/api/v1/playwright/js-action\", { message: userParams.message ?? message });",
            "params": {
                "message": "message",
                "topic": "topic"
            },
            "type": "action",
            "buttonLabel": "Get",
            "displayIcon": false,
            "displayResponse": true,
            "configParams": {
                "message": {
                    "visible": false,
                    "defaultValue": "",
                    "type": "text"
                },
                "topic": {
                    "visible": true,
                    "defaultValue": "",
                    "type": "string"
                }
            }
        },
        {
            "key": "value_1753367745305_vento_copy_tth1unvstwpkt11iv8w5p",
            "width": 2,
            "height": 8,
            "icon": "chart-column",
            "html": "\n\nreactCard(`\n  function Widget(props) {\n    const aspect = useCardAspectRatio('${data.domId}')\n    return (\n      <View className=\"no-drag\">\n        <BarChart\n          colors={chartColors}\n          title={\"players score\"}\n          id={\"barchart\"}\n          data={props.value}\n          dataKey={props.params.dataKey}\n          nameKey={props.params.nameKey}\n          isAnimationActive={false}\n          aspect={aspect}\n        />\n      </View>\n    );\n  }\n`, data.domId, data)\n        \n        ",
            "name": "Stars",
            "description": "Displays a bar chart using Recharts",
            "type": "value",
            "params": {
                "nameKey": "name",
                "dataKey": "value"
            },
            "rulesCode": "return (() => {\r\n  const res = board?.['Get Github Repositories']\r\n\r\n  const table = {}\r\n\r\n  const result = res.map(item => ({\r\n    name: item.name,\r\n    value: item.stars\r\n  }))\r\n\r\n  return result;\r\n})();"
        },
        {
            "key": "value_1753374859382",
            "width": 2.5,
            "height": 10,
            "icon": "chart-pie",
            "html": "\n\nreactCard(`\n  function Widget(props) {\n    const aspect = useCardAspectRatio('${data.domId}')\n    return (\n          <View className=\"no-drag\">\n            <PieChart\n              colors={chartColors}\n              title={\"players score\"}\n              id={\"piechart\"}\n              data={props.value}\n              dataKey={props.params.dataKey}\n              nameKey={props.params.nameKey}\n              isAnimationActive={false}\n              aspect={aspect}\n            />\n          </View>\n    );\n  }\n\n`, data.domId, data)\n\n\n\n            ",
            "name": "Languages",
            "description": "Displays a pie chart using Recharts",
            "rulesCode": "return (() => {\r\n  const res = board?.['Get Github Repositories']\r\n\r\n  const table = {}\r\n\r\n  res.forEach(item => {\r\n    table[item.language] = (table[item.language] ?? 0) + 1\r\n  })\r\n\r\n  const result = Object.keys(table).map(k => ({\r\n    name: k,\r\n    value: table[k]\r\n  }))\r\n\r\n  return result;\r\n})();",
            "type": "value",
            "params": {
                "nameKey": "name",
                "dataKey": "value"
            }
        },
        {
            "key": "value_1753431052431",
            "width": 3,
            "height": 12,
            "icon": "file-text",
            "html": "//@react\nreturn markdown(data)",
            "name": "Read Me",
            "description": "Render formatted markdown using ReactMarkdown",
            "type": "value",
            "rulesCode": "return `### What's this? \n\n# üß™ Playwright AI Browser Board\n\nThis is an example of a smart automation board using **Playwright**:\n\n1. üîç Fetches top GitHub repositories by topic.\n2. ü§ñ Controls Chromium using natural language via an AI Browser Action Card.\n\nPerfect for ethical scraping, automation demos, AI agents, or browser copilots.\n\n---\n\n## üöÄ Requirements\n\n    - Chromium installed\n    - OPENAI_API_KEY added to keys section`",
            "editorOptions": {
                "defaultTab": "value"
            }
        },
        {
            "key": "value_1753434972314",
            "width": 4,
            "height": 4,
            "icon": "key",
            "html": "\n//@react\nreactCard(`\n  async function validateKey(apiKey) {\n   // return true or false if the key is valid or not\n    return true;\n  }\n\n  function Widget() {\n    return (\n          <View className=\"no-drag\">\n            <KeySetter\n              nameKey={data?.configParams?.nameKey?.defaultValue}\n              validate={validateKey}\n              onAdd={(key) => {\n                // alert(\"add: \"+key)\n              }}\n              onRemove={(key) => {\n                // alert(\"remove: \"+key)\n              }}\n            />\n          </View>\n    );\n  }\n\n`, data.domId)\n\n            ",
            "name": "Key Setter",
            "description": "Displays a key setter for a specific key or in case already set displays key is set",
            "type": "value",
            "rulesCode": "",
            "params": {
                "nameKey": "The key name to set"
            },
            "configParams": {
                "nameKey": {
                    "visible": true,
                    "defaultValue": "OPENAI_API_KEY",
                    "type": "string"
                }
            }
        }
    ],
    "autopilot": false,
    "layouts": {
        "lg": [
            {
                "w": 2,
                "h": 3,
                "x": 0,
                "y": 0,
                "i": "action_1753274431392",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 8,
                "h": 8,
                "x": 0,
                "y": 3,
                "i": "action_1753275232639",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 2,
                "h": 3,
                "x": 2,
                "y": 0,
                "i": "action_1753276510670",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 7,
                "h": 11,
                "x": 15,
                "y": 0,
                "i": "action_1753275232639_vento_copy_7rj5xpu4q47ose3xm6hye",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 7,
                "h": 8,
                "x": 8,
                "y": 3,
                "i": "action_1753275232639_vento_copy_f5egvvk9tdo7iv4gg9t0f",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 14,
                "h": 11,
                "x": 8,
                "y": 11,
                "i": "value_1753367745305_vento_copy_tth1unvstwpkt11iv8w5p",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 8,
                "h": 11,
                "x": 0,
                "y": 11,
                "i": "value_1753374859382",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 4,
                "h": 3,
                "x": 4,
                "y": 0,
                "i": "value_1753431052431",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 7,
                "h": 3,
                "x": 8,
                "y": 0,
                "i": "value_1753434972314",
                "moved": false,
                "static": false,
                "isResizable": true
            }
        ],
        "md": [
            {
                "w": 5,
                "h": 3,
                "x": 0,
                "y": 0,
                "i": "action_1753274431392",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 10,
                "h": 7,
                "x": 0,
                "y": 3,
                "i": "action_1753275232639",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 5,
                "h": 3,
                "x": 5,
                "y": 0,
                "i": "action_1753276510670",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 14,
                "h": 10,
                "x": 10,
                "y": 0,
                "i": "action_1753275232639_vento_copy_7rj5xpu4q47ose3xm6hye",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 12,
                "h": 10,
                "x": 12,
                "y": 10,
                "i": "action_1753275232639_vento_copy_f5egvvk9tdo7iv4gg9t0f",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 24,
                "h": 12,
                "x": 0,
                "y": 20,
                "i": "value_1753367745305_vento_copy_tth1unvstwpkt11iv8w5p",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 12,
                "h": 10,
                "x": 0,
                "y": 10,
                "i": "value_1753374859382",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "i": "value_1753431052431",
                "x": 0,
                "y": 0,
                "w": 8,
                "h": 14,
                "isResizable": true
            },
            {
                "i": "value_1753434972314",
                "x": 0,
                "y": 0,
                "w": 10,
                "h": 5,
                "isResizable": true
            }
        ],
        "sm": [
            {
                "w": 1,
                "h": 4,
                "x": 0,
                "y": 0,
                "i": "action_1753274431392",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 2,
                "h": 6,
                "x": 0,
                "y": 33,
                "i": "action_1753275232639",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 1,
                "h": 4,
                "x": 1,
                "y": 0,
                "i": "action_1753276510670",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 2,
                "h": 16,
                "x": 0,
                "y": 17,
                "i": "action_1753275232639_vento_copy_7rj5xpu4q47ose3xm6hye",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 2,
                "h": 13,
                "x": 0,
                "y": 4,
                "i": "action_1753275232639_vento_copy_f5egvvk9tdo7iv4gg9t0f",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "i": "value_1753367745305_vento_copy_tth1unvstwpkt11iv8w5p",
                "x": 0,
                "y": 0,
                "w": 1,
                "h": 9,
                "isResizable": true
            },
            {
                "i": "value_1753374859382",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 11,
                "isResizable": true
            },
            {
                "i": "value_1753431052431",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 14,
                "isResizable": true
            },
            {
                "i": "value_1753434972314",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 5,
                "isResizable": true
            }
        ],
        "xs": [
            {
                "w": 1,
                "h": 4,
                "x": 0,
                "y": 0,
                "i": "action_1753274431392",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 2,
                "h": 6,
                "x": 0,
                "y": 33,
                "i": "action_1753275232639",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 1,
                "h": 4,
                "x": 1,
                "y": 0,
                "i": "action_1753276510670",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 2,
                "h": 16,
                "x": 0,
                "y": 17,
                "i": "action_1753275232639_vento_copy_7rj5xpu4q47ose3xm6hye",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 2,
                "h": 13,
                "x": 0,
                "y": 4,
                "i": "action_1753275232639_vento_copy_f5egvvk9tdo7iv4gg9t0f",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "i": "value_1753367745305_vento_copy_tth1unvstwpkt11iv8w5p",
                "x": 0,
                "y": 0,
                "w": 1,
                "h": 9,
                "isResizable": true
            },
            {
                "i": "value_1753374859382",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 11,
                "isResizable": true
            },
            {
                "i": "value_1753431052431",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 14,
                "isResizable": true
            },
            {
                "i": "value_1753434972314",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 5,
                "isResizable": true
            }
        ]
    }
}